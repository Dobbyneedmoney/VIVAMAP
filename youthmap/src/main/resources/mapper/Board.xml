<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.BoardDao">

    <!-- 게시글 등록 -->
    <insert id="insert" parameterType="com.example.demo.model.Board">
        INSERT INTO board (
            board_no, board_category, board_subject,
            board_content, board_readcount, board_date, mem_no
        ) VALUES (
            (SELECT NVL(MAX(board_no), 0) + 1 FROM board),
            #{boardCategory},
            #{boardSubject},
            #{boardContent},
            0,
            SYSDATE,
            #{memNo}
        )
    </insert>

    <!-- 게시글 수 카운트 -->
    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM board b
        JOIN member m ON b.mem_no = m.mem_no
        <where>
            <if test="category != null and category != ''">
                b.board_category = #{category}
            </if>
            <if test="excludeCategory != null and excludeCategory != ''">
                AND b.board_category != #{excludeCategory}
            </if>
            <if test="searchType != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchType == 'subject'">
                        AND b.board_subject LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="searchType == 'content'">
                        AND b.board_content LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="searchType == 'writer'">
                        AND m.mem_id LIKE '%' || #{keyword} || '%'
                    </when>
                </choose>
            </if>
        </where>
    </select>

   <!-- 게시글 목록 -->
<select id="list" parameterType="map" resultType="com.example.demo.model.Board">
  SELECT * FROM (
    SELECT inner_q.*, ROWNUM AS rn
    FROM (
      SELECT 
        b.board_no        AS boardNo,
        m.mem_id          AS memId,
        m.mem_name        AS memName,
        b.board_category  AS boardCategory,
        b.board_subject   AS boardSubject,
        b.board_content   AS boardContent,
        b.board_readcount AS boardReadcount,
        b.board_date      AS boardDate,
        b.mem_no          AS memNo
      FROM board b
      JOIN member m ON b.mem_no = m.mem_no
      <where>
        <if test="category != null and category != ''">
          AND b.board_category = #{category}
        </if>
        <if test="excludeCategory != null and excludeCategory != ''">
          AND b.board_category != #{excludeCategory}
        </if>
        <if test="searchType != null and keyword != null and keyword != ''">
          <choose>
            <when test="searchType == 'subject'">
              AND b.board_subject LIKE '%' || #{keyword} || '%'
            </when>
            <when test="searchType == 'content'">
              AND b.board_content LIKE '%' || #{keyword} || '%'
            </when>
            <when test="searchType == 'writer'">
              AND m.mem_id LIKE '%' || #{keyword} || '%'
            </when>
            <otherwise>
              AND (
                b.board_subject LIKE '%' || #{keyword} || '%'
                OR b.board_content LIKE '%' || #{keyword} || '%'
              )
            </otherwise>
          </choose>
        </if>
      </where>
      ORDER BY b.board_no DESC
    ) inner_q
    WHERE ROWNUM &lt;= #{endRow}
  )
  WHERE rn &gt;= #{startRow}
</select>



    <!-- 게시글 조회수 증가 -->
    <update id="updatecount" parameterType="int">
        UPDATE board
        SET board_readcount = board_readcount + 1
        WHERE board_no = #{no}
    </update>

    <!-- 게시글 상세 조회 -->
    <select id="content" parameterType="int" resultType="com.example.demo.model.Board">
        SELECT b.board_no AS boardNo,
               m.mem_id AS memId,
               m.mem_name AS memName,
               b.board_category AS boardCategory,
               b.board_subject AS boardSubject,
               b.board_content AS boardContent,
               b.board_readcount AS boardReadcount,
               b.board_date AS boardDate,
               b.mem_no AS memNo
        FROM board b
        JOIN member m ON b.mem_no = m.mem_no
        WHERE b.board_no = #{no}
    </select>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.example.demo.model.Board">
        UPDATE board
        SET board_category = #{boardCategory},
            board_subject = #{boardSubject},
            board_content = #{boardContent}
        WHERE board_no = #{boardNo}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="delete" parameterType="int">
        DELETE FROM board
        WHERE board_no = #{no}
    </delete>

    <!-- 게시글 중 가장 최근 번호 조회 -->
    <select id="getLastBoardNo" resultType="int">
        SELECT MAX(board_no) FROM board
    </select>

    <!-- 공지사항 3개 고정용 -->
    <select id="getTopNotices" resultType="com.example.demo.model.Board">
        SELECT b.board_no AS boardNo,
               m.mem_id AS memId,
               m.mem_name AS memName,
               b.board_category AS boardCategory,
               b.board_subject AS boardSubject,
               b.board_content AS boardContent,
               b.board_readcount AS boardReadcount,
               b.board_date AS boardDate,
               b.mem_no AS memNo
        FROM (
            SELECT * FROM board
            WHERE board_category = '공지'
            ORDER BY board_no DESC
        ) b
        JOIN member m ON b.mem_no = m.mem_no
        WHERE ROWNUM &lt;= 3
    </select>

    <!-- 내 게시물 조회 -->
    <select id="getMyPosts" parameterType="map" resultType="com.example.demo.model.Board">
        SELECT * FROM (
            SELECT inner_q.*, ROWNUM AS rn
            FROM (
                SELECT b.board_no AS boardNo,
                       m.mem_id AS memId,
                       m.mem_name AS memName,
                       b.board_category AS boardCategory,
                       b.board_subject AS boardSubject,
                       b.board_content AS boardContent,
                       b.board_readcount AS boardReadcount,
                       b.board_date AS boardDate,
                       b.mem_no AS memNo
                FROM board b
                JOIN member m ON b.mem_no = m.mem_no
                WHERE b.mem_no = #{memNo}
                ORDER BY b.board_no DESC
            ) inner_q
            WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE rn &gt;= #{startRow}
    </select>

    <!-- 모든 게시물 조회 (관리자용) -->
    <select id="getAllPosts" resultType="com.example.demo.model.Board">
        SELECT b.board_no AS boardNo,
               m.mem_id AS memId,
               m.mem_name AS memName,
               b.board_category AS boardCategory,
               b.board_subject AS boardSubject,
               b.board_content AS boardContent,
               b.board_readcount AS boardReadcount,
               b.board_date AS boardDate,
               b.mem_no AS memNo
        FROM board b
        JOIN member m ON b.mem_no = m.mem_no
        ORDER BY b.board_no DESC
    </select>

</mapper>
