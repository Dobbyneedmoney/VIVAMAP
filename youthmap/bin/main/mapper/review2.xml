<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.Review2Dao">

  <!-- 결과 맵 -->
  <resultMap id="review2Map" type="Review2">
    <id     column="review_id2"      property="review_id2"/>
    <result column="review_score2"   property="review_score2"/>
    <result column="review_content2" property="review_content2"/>
    <result column="review_file2"    property="review_file2"/>
    <result column="review_register2" property="review_register2"/>
    <result column="mem_no"          property="mem_no"/>
    <result column="con_id"          property="con_id"/>
    <result column="mem_id"          property="mem_id"/>
    <result column="mem_name"        property="mem_name"/>
  </resultMap>

  <!-- 페이징된 리뷰 목록 조회 -->
  <select id="review2List" resultType="Review2">
    SELECT * FROM (
      SELECT a.*, ROWNUM rn FROM (
        SELECT
          r.review_id2,
          r.review_score2,
          r.review_content2,
          r.review_file2,
          r.review_register2,
          r.mem_no,
          r.con_id,
          m.mem_id,
          m.mem_name
        FROM review2 r
        LEFT JOIN member m ON r.mem_no = m.mem_no
        WHERE r.con_id = #{con_id}
        ORDER BY r.review_register2 DESC
      ) a
      WHERE ROWNUM &lt;= #{endRow}
    )
    WHERE rn &gt;= #{startRow}
  </select>

  <!-- 리뷰 등록 -->
  <insert id="insertReview2" parameterType="Review2">
    INSERT INTO review2 (
      review_id2,
      review_score2,
      review_content2,
      review_file2,
      review_register2,
      mem_no,
      con_id
    ) VALUES (
      review2_seq.NEXTVAL,
      #{review_score2},
      #{review_content2},
      #{review_file2, jdbcType=VARCHAR},
      SYSDATE,
      #{mem_no},
      #{con_id}
    )
  </insert>

  <!-- 리뷰 수정 -->
  <update id="updateReview2" parameterType="Review2">
    UPDATE review2
       SET review_score2   = #{review_score2},
           review_content2 = #{review_content2},
           review_file2    = #{review_file2, jdbcType=VARCHAR}
     WHERE review_id2 = #{review_id2} AND mem_no = #{mem_no}
  </update>

  <!-- 리뷰 삭제 -->
  <delete id="deleteReview2" parameterType="int">
    DELETE FROM review2
      WHERE review_id2 = #{review_id2}
  </delete>

  <!-- 단일 리뷰 조회 (수정 폼용) -->
  <select id="selectReview2" parameterType="int" resultType="Review2">
    SELECT
      r.review_id2,
      r.review_score2,
      r.review_content2,
      r.review_file2,
      r.review_register2,
      r.mem_no,
      r.con_id,
      m.mem_id,
      m.mem_name
    FROM review2 r
    LEFT JOIN member m ON r.mem_no = m.mem_no
    WHERE r.review_id2 = #{review_id2}
  </select>

  <!-- 리뷰 개수 조회 (페이징 계산용) -->
  <select id="countReview2" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM review2 
     WHERE con_id = #{con_id}
  </select>

  <!-- 첨부파일명 조회 -->
  <select id="selectFile2" parameterType="int" resultType="String">
    SELECT review_file2
      FROM review2
     WHERE review_id2 = #{review_id2}
  </select>

  <!-- 작성자 확인 -->
  <select id="checkReview2Author" parameterType="Review2" resultType="int">
    SELECT COUNT(*) FROM review2 WHERE review_id2 = #{review_id2} AND mem_no = #{mem_no}
  </select>

</mapper>